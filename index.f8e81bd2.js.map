{"mappings":"kBAAAA,EAAiB,CAAEC,YASnB,WAIE,OAHAC,EAASC,UAAUC,OAAO,UAE1BC,EAAYC,aAAa,UAAU,GAC5BC,MAAM,sCAAuC,CAClDC,QAAS,CACP,YAAaC,KAGdC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,sCAElB,OAAOF,EAASG,M,IAEjBJ,MAAK,SAAAK,GAMJ,OALqBA,EAAKC,KAAI,SAAAC,G,MAAU,CACtCC,MAAOD,EAAME,GACbC,KAAMH,EAAMG,K,OAMfC,OAAM,SAAAC,GACLC,EAAaC,MAAMC,QAAU,QAC7BC,QAAQC,IAAI,gDAAiDL,GAC7DjB,EAAYmB,MAAMC,QAAU,M,IAE7BG,SAAQ,WACP1B,EAASC,UAAU0B,IAAI,UAEvBxB,EAAYyB,gBAAgB,S,KAzCFC,gBA6ChC,SAAyBC,GAKvB,OAJA9B,EAASC,UAAUC,OAAO,UAC1BC,EAAYC,aAAa,YAAY,GACrC2B,EAAeT,MAAMC,QAAU,OAG7BlB,MAAM,wDAAgE2B,OAARF,GAAW,CACvExB,QAAS,CACP,YAAaC,KAGdC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,gCAElB,OAAOF,EAASG,M,IAKjBO,OAAM,SAAAC,GAGLI,QAAQJ,MAAM,iCAAkCA,E,IAEjDM,SAAQ,WACP1B,EAASC,UAAU0B,IAAI,UACvBxB,EAAYyB,gBAAgB,YAC5BG,EAAeT,MAAMC,QAAU,M,MAvEvC,IAAMhB,EACJ,wEACIJ,EAAc8B,SAASC,cAAc,iBACrClC,EAAWiC,SAASC,cAAc,WAClCH,EAAiBE,SAASC,cAAc,aACxCb,EAAeY,SAASC,cAAc,UCL5C,IAAMC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,UAO5CD,SAASI,iBAAiB,oBAAoB,YAC5C,EAAAvC,EAAAC,eAAcS,MAAK,SAAA8B,GACjBA,EAAaC,SAAQ,SAAAC,GACnB,IAAMC,EAAgBR,SAASS,cAAc,UAC7CD,EAAczB,MAAQwB,EAAOxB,MAC7ByB,EAAcE,YAAcH,EAAOtB,KACnCiB,EAAYS,YAAYH,E,UAK9BN,EAAYE,iBAAiB,UAAU,WACrC,IAAMQ,EAAkBV,EAAYnB,MACpCoB,EAAad,MAAMC,QAAU,QAE7B,EAAAzB,EAAA+B,iBAAgBgB,GACbrC,MAAK,SAAAsC,GACJ,KAAIA,EAAQC,OAAS,GAgBnB,MAAM,IAAIpC,MAAM,wBAfhB,IAAMqC,EAAMF,EAAQ,GAAGG,OAAO,GACxBC,EAASJ,EAAQ,GACvBtB,QAAQC,IAAIqB,GACZ,IAAMK,EAAU,0CAGenB,OAFAkB,EAAOE,IAAI,0FAGLpB,OADNgB,EAAI9B,KAAK,sDAEiCc,OADpCgB,EAAIK,YAAY,6FACoCrB,OAAhBgB,EAAIM,YAAY,+CAIlErB,SAASC,cAAc,aAC/BqB,UAAYJ,C,IAK9BhC,OAAM,SAAAC,GACLgB,EAAad,MAAMC,QAAU,QAC7BC,QAAQJ,MAAM,0CAA2CA,E","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["module.exports = { fetchBreeds, fetchCatByBreed };\n\nconst apiKey =\n  'live_8nXLD69ky6MH51nGc5mvPbjfOi98w4qyCcfPOoIFwqHLRKTTVCD9ryS7DrODa9D1';\nconst breedSelect = document.querySelector('.breed-select');\nconst loadInfo = document.querySelector('.loader');\nconst catInfoElement = document.querySelector('.cat-info');\nconst errorElement = document.querySelector('.error');\n\nfunction fetchBreeds() {\n  loadInfo.classList.remove('loader');\n  //breedSelect.style.display = 'none';\n  breedSelect.setAttribute('hidden', true);\n  return fetch('https://api.thecatapi.com/v1/breeds', {\n    headers: {\n      'x-api-key': apiKey,\n    },\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to retrieve cat brees data.');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const breedOptions = data.map(breed => ({\n        value: breed.id,\n        name: breed.name,\n      }));\n\n      return breedOptions;\n    })\n\n    .catch(error => {\n      errorElement.style.display = 'block';\n      console.log('There was a problem with the fetch operation:', error);\n      breedSelect.style.display = 'none';\n    })\n    .finally(() => {\n      loadInfo.classList.add('loader');\n      //breedSelect.style.display = 'block';\n      breedSelect.removeAttribute('hidden');\n    });\n}\n\nfunction fetchCatByBreed(breedId) {\n  loadInfo.classList.remove('loader');\n  breedSelect.setAttribute('disabled', true);\n  catInfoElement.style.display = 'none';\n  //catInfoElement.setAttribute('hidden', true);\n  return (\n    fetch(`https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`, {\n      headers: {\n        'x-api-key': apiKey,\n      },\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to retrieve cat data.');\n        }\n        return response.json();\n      })\n      //.then(data => {\n      //  return data;\n      //})\n      .catch(error => {\n        //errorElement.style.display = 'block';\n        //breedSelect.style.display = 'none';\n        console.error('Error while fetching cat data:', error);\n      })\n      .finally(() => {\n        loadInfo.classList.add('loader');\n        breedSelect.removeAttribute('disabled');\n        catInfoElement.style.display = 'flex';\n        //catInfoElement.removeAttribute('hidden');\n      })\n  );\n}\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst errorElement = document.querySelector('.error');\n\n//const loadInfo = document.querySelector('.loader');\n//const apiKey =\n//'live_8nXLD69ky6MH51nGc5mvPbjfOi98w4qyCcfPOoIFwqHLRKTTVCD9ryS7DrODa9D1';\n\n//breedSelect.addEventListener('change', function () {});\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchBreeds().then(breedOptions => {\n    breedOptions.forEach(option => {\n      const optionElement = document.createElement('option');\n      optionElement.value = option.value;\n      optionElement.textContent = option.name;\n      breedSelect.appendChild(optionElement);\n    });\n  });\n});\n\nbreedSelect.addEventListener('change', function () {\n  const selectedBreedId = breedSelect.value;\n  errorElement.style.display = 'none';\n\n  fetchCatByBreed(selectedBreedId)\n    .then(catData => {\n      if (catData.length > 0) {\n        const cat = catData[0].breeds[0];\n        const catImg = catData[0];\n        console.log(catData);\n        const catHtml = `\n            <img class=\"cat-img\" src=${catImg.url} alt=\"Cat\">\n            <div class=\"cat-text\">\n                <h2 class=\"cat-name\">${cat.name}</h2>\n                <p class=\"cat-description\">${cat.description}</p>    \n                <p class=\"cat-temp\"><span class=\"text-bold\">Temperament:</span>${cat.temperament}</p>\n            </div>\n       \n        `;\n        const catInfoElement = document.querySelector('.cat-info');\n        catInfoElement.innerHTML = catHtml;\n      } else {\n        throw new Error('Brak danych o kocie.');\n      }\n    })\n    .catch(error => {\n      errorElement.style.display = 'block';\n      console.error('Błąd podczas pobierania danych o kocie:', error);\n    });\n});\n"],"names":["$ae0c329fb0fb36dc$exports","fetchBreeds","$ae0c329fb0fb36dc$var$loadInfo","classList","remove","$ae0c329fb0fb36dc$var$breedSelect","setAttribute","fetch","headers","$ae0c329fb0fb36dc$var$apiKey","then","response","ok","Error","json","data","map","breed","value","id","name","catch","error","$ae0c329fb0fb36dc$var$errorElement","style","display","console","log","finally","add","removeAttribute","fetchCatByBreed","breedId","$ae0c329fb0fb36dc$var$catInfoElement","concat","document","querySelector","$b8f9b7833fa37166$var$breedSelect","$b8f9b7833fa37166$var$errorElement","addEventListener","breedOptions","forEach","option","optionElement","createElement","textContent","appendChild","selectedBreedId","catData","length","cat","breeds","catImg","catHtml","url","description","temperament","innerHTML"],"version":3,"file":"index.f8e81bd2.js.map"}